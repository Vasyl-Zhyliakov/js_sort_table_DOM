{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,KAAK,CAAC,gBAAgB,CAAC,MACvC,EAAO,EAAM,aAAa,CAAC,SAEjC,SAAS,EAAU,CAAK,EACtB,MAAO,CAAC,EAAM,KAAK,CAAC,GAAG,UAAU,CAAC,IAAK,GACzC,CAEA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,I,EAAM,EAAa,EAAO,SAAS,CAE7B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAK,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEvC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAChC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAEtC,OAAQ,GACN,IAAK,OACL,IAAK,WACH,OAAO,EAAM,aAAa,CAAC,EAE7B,KAAK,MACH,MAAO,CAAC,EAAQ,CAAC,CAEnB,KAAK,SACH,OAAO,EAAU,GAAS,EAAU,EACxC,CACF,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAK,MAAM,CAAC,E,EACpC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"table\");\nvar headers = table.tHead.querySelectorAll(\"th\");\nvar body = table.querySelector(\"tbody\");\nfunction getSalary(query) {\n    return +query.slice(1).replaceAll(\",\", \"\");\n}\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var headerName = header.innerText;\n        var rows = _to_consumable_array(body.querySelectorAll(\"tr\"));\n        rows.sort(function(a, b) {\n            var cellA = a.cells[index].innerText;\n            var cellB = b.cells[index].innerText;\n            switch(headerName){\n                case \"Name\":\n                case \"Position\":\n                    return cellA.localeCompare(cellB);\n                case \"Age\":\n                    return +cellA - +cellB;\n                case \"Salary\":\n                    return getSalary(cellA) - getSalary(cellB);\n            }\n        });\n        rows.forEach(function(row) {\n            return body.append(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.e5ed8a83.js.map\n","'use strict';\n// write code here\n\nconst table = document.querySelector('table');\nconst headers = table.tHead.querySelectorAll('th');\nconst body = table.querySelector('tbody');\n\nfunction getSalary(query) {\n  return +query.slice(1).replaceAll(',', '');\n}\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const headerName = header.innerText;\n\n    const rows = [...body.querySelectorAll('tr')];\n\n    rows.sort((a, b) => {\n      const cellA = a.cells[index].innerText;\n      const cellB = b.cells[index].innerText;\n\n      switch (headerName) {\n        case 'Name':\n        case 'Position':\n          return cellA.localeCompare(cellB);\n\n        case 'Age':\n          return +cellA - +cellB;\n\n        case 'Salary':\n          return getSalary(cellA) - getSalary(cellB);\n      }\n    });\n\n    rows.forEach((row) => body.append(row));\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","headers","tHead","querySelectorAll","body","getSalary","query","slice","replaceAll","forEach","header","index","addEventListener","headerName","innerText","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","cellA","cells","cellB","localeCompare","row","append"],"version":3,"file":"index.e5ed8a83.js.map"}